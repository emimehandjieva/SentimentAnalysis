@model IEnumerable<SentimentAnalysis.SentimentModule.MultipleSentimentAnalysisData>

@{
    ViewBag.Title = "CompareResults";
}

<h2>Compare Results of all applied methods for sentiment evaluation</h2>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ReviewText)
        </th>
        <th>
           // @Html.DisplayNameFor(model => model.Grade)
            @Html.Raw("Original Grade");
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LexiconSentimentEvaluation)
            @Html.Raw("Lexicon Method");
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NaiveBayesSentimentEvaluation)
            @Html.Raw("Naive Bayes");
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SVMSentimentEvaluation)
            @Html.Raw("SVM");
        </th>
        <th></th>
    </tr>
    <tr>
        <td>
            @Html.Raw("Total Errors:");
        </td>
        <td>
           
        </td>
        <td>
            @Html.Raw(Model.Sum(m=>m.Grade-m.LexiconSentimentEvaluation).ToString())
        </td>
        <td>
            @Html.Raw(Model.Sum(m => m.Grade - m.NaiveBayesSentimentEvaluation).ToString())
        </td>
        <td>
            @Html.Raw(Model.Sum(m => m.Grade - m.SVMSentimentEvaluation).ToString())
        </td>
    </tr>
@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ReviewText)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Grade)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LexiconSentimentEvaluation)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.NaiveBayesSentimentEvaluation)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SVMSentimentEvaluation)
        </td>
    </tr>
}

</table>
